version: 2
# Tell CircleCI to use this workflow
workflows:
  version: 2
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - "upstream-dev"
      - "python-3.6"
      - "python-3.7"
      - "python-3.8"
  default:
    jobs:
      - "upstream-dev"
      - "python-3.6"
      - "python-3.7"
      - "python-3.8"

shared: &shared
    steps:
      - checkout
      # Restore cached files to speed things up
      - restore_cache:
          key: deps-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "environment.yml" }}
      - run: # install and activate conda environment
          name: Install conda environment
          command: |
            conda env update -f ${ENV_FILE} -q
            source activate ${ENV_NAME}
            conda list
      - run:
          name: Run Tests
          command: |
            mkdir -p test-reports
            source activate ${ENV_NAME}
            echo $(circleci tests glob ${TEST_FILES})
            circleci tests glob ${TEST_FILES} | circleci tests split --split-by=timings | xargs python -m pytest --junitxml=test-reports/results.xml -v --current-env --nbval-lax
          no_output_timeout: 30m

      # Cache some files for a speedup in subsequent builds
      - save_cache:
          key: deps-{{ .Environment.CIRCLE_PROJECT_REPONAME }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "environment.yml" }}
          paths:
            - "/opt/conda/envs/${ENV_NAME}/"
            - "/opt/conda/pkgs"

      # Tell Circle to store the documentation output in a folder that we can access later
      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports

jobs:

  "upstream-dev":
    <<: *shared
    docker:
      - image: ncarxdev/miniconda:3.7
    environment:
      ENV_FILE: "./environment-upstream-dev.yml"
      ENV_NAME: "notebook-gallery"
      TEST_FILES: "notebooks/Run-Anywhere/**/*.ipynb"

  "python-3.6":
    <<: *shared
    docker:
      - image: ncarxdev/miniconda:3.6
    environment:
      ENV_FILE: "./environment.yml"
      ENV_NAME: "notebook-gallery"
      TEST_FILES: "notebooks/Run-Anywhere/**/*.ipynb"

  "python-3.7":
    <<: *shared
    docker:
      - image: ncarxdev/miniconda:3.7
    environment:
      ENV_FILE: "./environment.yml"
      ENV_NAME: "notebook-gallery"
      TEST_FILES: "notebooks/Run-Anywhere/**/*.ipynb"

  "python-3.8":
    <<: *shared
    docker:
      - image: ncarxdev/miniconda:3.8
    environment:
      ENV_FILE: "./environment.yml"
      ENV_NAME: "notebook-gallery"
      TEST_FILES: "notebooks/Run-Anywhere/**/*.ipynb"
